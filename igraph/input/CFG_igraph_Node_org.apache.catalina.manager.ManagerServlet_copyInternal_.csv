Node	CRUD	DataFlowValue
r0 := @parameter0: java.io.File	R	[]
$r13 = r9[i0]	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12]
if r6 == null goto throw r8	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8]
r9 = newarray (java.lang.String)[1]	C	[r0, r1, r2, z0, n0, $z2]
$r12 = new java.io.File	C	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3]
return z0	R	[r0, r1, r2, z0, n0, $z2, i0, $i2]
n0 = null	U	[r0, r1, r2, z0]
$z3 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4]
throw r8	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8]
goto [?= i1 = virtualinvoke r5.<java.io.FileInputStream: int read(byte[])>(r2)]	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
r29 = $r28	U	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2, $r28]
if i1 != -1 goto virtualinvoke r6.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, i1)	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
r9 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>()	U	[r0, r1, r2, z0, n0, $z2]
$r16 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6]
r6 = null	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5]
r23 = $r22	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8, $r22]
$r11 = r9[i0]	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10]
if $z3 == 0 goto r5 = null	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3]
specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(r3)	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14]
r17 = $r16	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16]
if r6 == null goto i0 = i0 + 1	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
r7 = $r18	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17, $r18]
if z0 != 0 goto $r10 = new java.io.File	R	[r0, r1, r2, z0, n0, $z2, i0, $i2]
if r5 == null goto (branch)	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
virtualinvoke r17.<java.io.IOException: void printStackTrace()>()	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17]
specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.io.File)>(r4)	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15]
z0 = 1	U	[r0, r1, r2]
z0 = 0	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17]
r4 = $r12	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13]
if i0 >= $i2 goto return z0	R	[r0, r1, r2, z0, n0, $z2, i0, $i2]
r2 := @parameter2: byte[]	R	[r0, r1]
goto [?= $i2 = lengthof r9]	R	[r0, r1, r2, z0, n0, $z2, r9, i0]
specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r11)	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11]
$r22 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8]
virtualinvoke r5.<java.io.FileInputStream: void close()>()	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
$i2 = lengthof r9	U	[r0, r1, r2, z0, n0, $z2, i0]
r8 = $r21	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21]
specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r13)	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13]
r6 = $r15	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15]
r3 = $r10	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11]
z0 = virtualinvoke r1.<java.io.File: boolean mkdir()>()	U	[r0, r1, r2, z0, n0, $z2, r9]
virtualinvoke r6.<java.io.FileOutputStream: void close()>()	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
r9[0] = ""	U	[r0, r1, r2, z0, n0, $z2, r9]
$r24 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8]
$r19 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17]
if $z2 == 0 goto r9 = newarray (java.lang.String)[1]	R	[r0, r1, r2, z0, n0, $z2]
z0 = staticinvoke <org.apache.catalina.manager.ManagerServlet: boolean copyInternal(java.io.File,java.io.File,byte[])>(r3, r4, r2)	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3]
$r14 = new java.io.FileInputStream	C	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6]
r20 = $r19	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17, $r19]
$r15 = new java.io.FileOutputStream	C	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14]
virtualinvoke r6.<java.io.FileOutputStream: void write(byte[],int,int)>(r2, 0, i1)	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
z1 = 0	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15]
goto [?= (branch)]	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
if r9 != null goto i0 = 0	R	[r0, r1, r2, z0, n0, $z2, r9]
r9 = newarray (java.lang.String)[0]	C	[r0, r1, r2, z0, n0, $z2, r9]
i1 = virtualinvoke r5.<java.io.FileInputStream: int read(byte[])>(r2)	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1]
r1 := @parameter1: java.io.File	R	[r0]
$z2 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()	U	[r0, r1, r2, z0, n0]
goto [?= i0 = i0 + 1]	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
$r10 = new java.io.File	C	[r0, r1, r2, z0, n0, $z2, i0, $i2]
$r18 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r16, r17]
goto [?= throw r8]	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8]
r5 = $r14	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14]
$r28 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
$r21 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6]
r27 = $r26	U	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2, $r26]
i0 = 0	U	[r0, r1, r2, z0, n0, $z2, r9]
i0 = i0 + 1	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3]
$r26 := @caughtexception	R	[r0, r1, r2, z0, n0, $z2, i0, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r14, $r15, z1, i1, $i2]
r25 = $r24	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3, r5, r6, $r21, r8, $r24]
r5 = null	U	[r0, r1, r2, z0, n0, $z2, i0, $i2, $r10, $r11, r3, $r12, $r13, r4, $z3]
