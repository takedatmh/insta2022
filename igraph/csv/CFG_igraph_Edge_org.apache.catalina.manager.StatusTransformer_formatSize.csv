start	end	CRUD_Test
r0 := @parameter0: java.lang.Object	z0 := @parameter1: boolean	0
z0 := @parameter1: boolean	l0 = -1L	0
l0 = -1L	$z1 = r0 instanceof java.lang.Long	1
$z1 = r0 instanceof java.lang.Long	if $z1 == 0 goto $z2 = r0 instanceof java.lang.Integer	1
if $z1 == 0 goto $z2 = r0 instanceof java.lang.Integer	$r2 = (java.lang.Long) r0	0
if $z1 == 0 goto $z2 = r0 instanceof java.lang.Integer	$z2 = r0 instanceof java.lang.Integer	0
$r2 = (java.lang.Long) r0	l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>()	1
l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>()	goto [?= (branch)]	1
goto [?= (branch)]	if z0 == 0 goto $r12 = new java.lang.StringBuilder	0
$z2 = r0 instanceof java.lang.Integer	if $z2 == 0 goto (branch)	1
if $z2 == 0 goto (branch)	$r3 = (java.lang.Integer) r0	0
if $z2 == 0 goto (branch)	if z0 == 0 goto $r12 = new java.lang.StringBuilder	0
$r3 = (java.lang.Integer) r0	$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()	1
$i3 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()	l0 = (long) $i3	1
l0 = (long) $i3	if z0 == 0 goto $r12 = new java.lang.StringBuilder	1
if z0 == 0 goto $r12 = new java.lang.StringBuilder	$r4 = new java.lang.StringBuilder	0
if z0 == 0 goto $r12 = new java.lang.StringBuilder	$r12 = new java.lang.StringBuilder	0
$r4 = new java.lang.StringBuilder	specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()	1
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()	r1 = $r4	0
r1 = $r4	$b4 = l0 cmp 0L	1
$b4 = l0 cmp 0L	if $b4 >= 0 goto l1 = l0 / 1048576L	1
if $b4 >= 0 goto l1 = l0 / 1048576L	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)	0
if $b4 >= 0 goto l1 = l0 / 1048576L	l1 = l0 / 1048576L	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)	l0 = neg l0	0
l0 = neg l0	l1 = l0 / 1048576L	1
l1 = l0 / 1048576L	$l5 = l1 * 1048576L	1
$l5 = l1 * 1048576L	$l6 = l0 - $l5	1
$l6 = l0 - $l5	$l7 = $l6 * 100L	1
$l7 = $l6 * 100L	l2 = $l7 / 1048576L	1
l2 = $l7 / 1048576L	$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)	1
$r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1)	virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)	1
virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)	$b8 = l2 cmp 10L	0
$b8 = l2 cmp 10L	if $b8 >= 0 goto $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	1
if $b8 >= 0 goto $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)	0
if $b8 >= 0 goto $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	$r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48)	$r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	0
$r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2)	virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MB")	1
virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MB")	$r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()	0
$r11 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()	return $r11	1
$r12 = new java.lang.StringBuilder	$l9 = l0 / 1024L	1
$l9 = l0 / 1024L	$r13 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l9)	1
$r13 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l9)	specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13)	1
specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13)	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KB")	0
$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" KB")	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()	1
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()	return $r15	1
