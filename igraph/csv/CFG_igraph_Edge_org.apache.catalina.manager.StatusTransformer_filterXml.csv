start	end	CRUD_Test
r0 := @parameter0: java.lang.String	if r0 != null goto $r2 = new java.lang.StringBuilder	0
if r0 != null goto $r2 = new java.lang.StringBuilder	return ""	0
if r0 != null goto $r2 = new java.lang.StringBuilder	$r2 = new java.lang.StringBuilder	0
$r2 = new java.lang.StringBuilder	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()	1
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()	r1 = $r2	0
r1 = $r2	i0 = 0	1
i0 = 0	goto [?= $i2 = virtualinvoke r0.<java.lang.String: int length()>()]	1
goto [?= $i2 = virtualinvoke r0.<java.lang.String: int length()>()]	$i2 = virtualinvoke r0.<java.lang.String: int length()>()	0
c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)	if c1 != 60 goto (branch)	1
if c1 != 60 goto (branch)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;")	0
if c1 != 60 goto (branch)	if c1 != 62 goto (branch)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;")	goto [?= i0 = i0 + 1]	0
goto [?= i0 = i0 + 1]	i0 = i0 + 1	0
if c1 != 62 goto (branch)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;")	0
if c1 != 62 goto (branch)	if c1 != 39 goto (branch)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;")	goto [?= i0 = i0 + 1]	0
goto [?= i0 = i0 + 1]	i0 = i0 + 1	0
if c1 != 39 goto (branch)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&apos;")	0
if c1 != 39 goto (branch)	if c1 != 38 goto (branch)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&apos;")	goto [?= i0 = i0 + 1]	0
goto [?= i0 = i0 + 1]	i0 = i0 + 1	0
if c1 != 38 goto (branch)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;")	0
if c1 != 38 goto (branch)	if c1 != 34 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;")	goto [?= i0 = i0 + 1]	0
goto [?= i0 = i0 + 1]	i0 = i0 + 1	0
if c1 != 34 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;")	0
if c1 != 34 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)	virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;")	goto [?= i0 = i0 + 1]	0
goto [?= i0 = i0 + 1]	i0 = i0 + 1	0
virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1)	i0 = i0 + 1	0
i0 = i0 + 1	$i2 = virtualinvoke r0.<java.lang.String: int length()>()	1
$i2 = virtualinvoke r0.<java.lang.String: int length()>()	if i0 < $i2 goto c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)	1
if i0 < $i2 goto c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)	$r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()	0
if i0 < $i2 goto c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)	c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0)	0
$r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()	return $r9	1
